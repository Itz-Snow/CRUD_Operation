// This is  Prisma schema file

// Handles all interactions between your application and your database.
generator client {
  provider = "prisma-client-js"
}
// Defines the database connection
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Defines the User database models and their relationships
// Each model corresponds to a table in the database
// UserInfoTB - Stores main information about a user

model UserInfoTB {
  id            Int        @id @default(autoincrement()) // Primary key, autoincrement
  profilePhoto String                                   // URL or path to profile photo
  firstName    String                                   
  lastName     String                                   
  dob          DateTime                               
  occupation   String                                   
  gender       String                                

  // Relation to related models
  contact     UserContactTB?    // Each User may have at most 1 Contact
  address     UserAddressTB?    // Each User may have at most 1 Address
  academics   UserAcademicsTB? // Each User may have at most 1 Academic record
}

 // UserContactTB - Stores user's contact details
model UserContactTB {
  id            Int        @id @default(autoincrement()) // Primary key, autoincrement
  email         String     @unique                        
  phoneNumber   String                                  
  fax           String?                                   
  linkedInUrl   String?                              

  // Foreign key linking back to UserInfo
  userId        Int        @unique
  user          UserInfoTB @relation(fields: [userId], references: [id], onDelete: Cascade) 
}

 // UserAddressTB - Stores user's address details
model UserAddressTB {
  id        Int        @id @default(autoincrement()) // Primary key, autoincrement
  address   String                                   
  city      String                                   
  state     String                                   
  country   String                                  
  zipCode   String                                   

  // Foreign key linking back to UserInfo
  userId    Int        @unique
  user      UserInfoTB @relation(fields: [userId], references: [id], onDelete: Cascade) 
}

 // UserAcademicsTB - Stores user's educational background
model UserAcademicsTB {
  id        Int        @id @default(autoincrement()) 
  schools   String[]   // Array of school names

  // Foreign key linking back to UserInfo
  userId    Int        @unique
  user      UserInfoTB @relation(fields: [userId], references: [id], onDelete: Cascade) 
}
